package com.example.NotifyTrafficTelegramBot.service.serviceUtils;

import com.example.NotifyTrafficTelegramBot.dto.UserInformationDto;
import com.example.NotifyTrafficTelegramBot.dto.UserSessionDto;
import com.example.NotifyTrafficTelegramBot.enums.States;
import lombok.Getter;
import org.springframework.stereotype.Component;

import java.util.function.Consumer;

@Component
@Getter
public class FsmProcessor {

    private final SessionStorage sessionStorage;

    public FsmProcessor(SessionStorage sessionStorage) {
        this.sessionStorage = sessionStorage;
    }

    public boolean handleFsmInput(Long chatId, String message, Consumer<String> replySender) {
        UserSessionDto session = sessionStorage.getSession(chatId);
        if (session == null || session.getState() == null) {
            replySender.accept("ü™ß –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ù–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É\".");
            return false;
        }

        switch (session.getState()) {
            case ASK_ARRIVAL_DATE -> {
                session.getInformationDto().setArrivalDate(message);
                session.setState(States.ASK_HOME_ADDRESS);
                replySender.accept("üè† –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å:");
            }
            case ASK_HOME_ADDRESS -> {
                session.getInformationDto().setHomeAddress(message);
                session.setState(States.ASK_WORK_ADDRESS);
                replySender.accept("üè¢ –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Ä–∞–±–æ—Ç—ã:");
            }
            case ASK_WORK_ADDRESS -> {
                session.getInformationDto().setWorkAddress(message);
                session.setState(States.ASK_TIMEZONE);
                replySender.accept("üåç –£–∫–∞–∂–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, UTC+3):");
            }
            case ASK_TIMEZONE -> {
                session.getInformationDto().setTimezone(message);
                session.setState(States.DONE);
                replySender.accept("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:\n\n" + format(session.getInformationDto()));
            }
            case DONE -> replySender.accept("üëã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–π.");
        }
        return true;
    }

    private String format(UserInformationDto data) {
        return "üìÖ –î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è: " + data.getArrivalDate() + "\n" +
                "üè† –î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å: " + data.getHomeAddress() + "\n" +
                "üè¢ –ê–¥—Ä–µ—Å —Ä–∞–±–æ—Ç—ã: " + data.getWorkAddress() + "\n" +
                "üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: " + data.getTimezone();
    }

}
